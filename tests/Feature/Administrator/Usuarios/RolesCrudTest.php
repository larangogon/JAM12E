<?php

namespace Tests\Feature\Administrator\Usuarios;

use App\Cart;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Spatie\Permission\Models\Role;
use Tests\TestCase;

class RolesCrudTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var \Illuminate\Database\Eloquent\Collection|\Illuminate\Database\Eloquent\Model|mixed
     */
    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->withoutExceptionHandling();
        $this->withoutMiddleware();

        $this->seed(\PermissionsTableSeeder::class);
        $this->user = factory(User::class)->create();

        $this->user->assignRole('Administrator');

        $this->cart =  new Cart();
        $this->cart->user_id = $this->user->id;
        $this->cart->save();
    }

    public function testIndex(): void
    {
        $response = $this->actingAs($this->user, 'web')->get(route('roles.index'));
        $response
            ->assertStatus(200)
            ->assertViewHas(['roles', 'permissions'])
            ->assertViewIs('roles.index');
    }

    public function testStore(): void
    {
        $response = $this->actingAs($this->user, 'web')->post(route('roles.store'), [
            'name'       => 'rolesdr',
            'guard_name' => 'web',
            ]);

        $response
            ->assertStatus(302)
            ->assertRedirect(route('roles.index'));
        $this->assertDatabaseHas('roles', ['name' => 'rolesdr']);
    }

    public function testDestroy(): void
    {
        $role = Role::create([
            'id'         => 32,
            'name'       => 'ppp',
            'guard_name' => 'web',
        ]);

        $response = $this->actingAs($this->user, 'web')
            ->delete(route('roles.destroy', $role->id), [
                'id' => $role->id = 32
        ]);

        $response
            ->assertStatus(302)
            ->assertRedirect(route('roles.index'));
        $this->assertDatabaseMissing('roles', [
            'id'  => $role->id = 32,
        ]);
    }
}
