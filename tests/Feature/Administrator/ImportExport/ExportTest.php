<?php

namespace Tests\Feature\Administrator\ImportExport;

use App\Entities\Cart;
use App\Exports\OrdersExport;
use App\Exports\ProductsExport;
use App\Exports\UsersExport;
use App\Entities\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Maatwebsite\Excel\Facades\Excel;
use Tests\TestCase;

class ExportTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var \Illuminate\Database\Eloquent\Collection|\Illuminate\Database\Eloquent\Model|mixed
     */
    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->withoutExceptionHandling();
        $this->withoutMiddleware();

        $this->seed(\PermissionsTableSeeder::class);
        $this->user = factory(User::class)->create();

        $this->user->assignRole('Administrator');

        $this->cart =  new Cart();
        $this->cart->user_id = $this->user->id;
        $this->cart->save();
    }

    /**
     * @test
     */
    public function userCanDownloadProductsExport()
    {
        $this->withoutExceptionHandling();
        Excel::fake();

        $this->actingAs($this->user, 'web')
            ->get('exportProducts');

        Excel::assertDownloaded('products.xlsx', function (ProductsExport $export) {
            return true;
        });
    }

    /**
     * @test
     */
    public function userCanDownloadUsersExport()
    {
        $this->withoutExceptionHandling();
        Excel::fake();

        $this->actingAs($this->user, 'web')
            ->get('exportUsers');

        Excel::assertDownloaded('users.xlsx', function (UsersExport $export) {
            return true;
        });
    }

    /**
     * @test
     */
    public function userDanDownloadOrdersExport()
    {
        $this->withoutExceptionHandling();
        Excel::fake();

        $this->actingAs($this->user, 'web')
            ->get('exportOrders');

        Excel::assertDownloaded('orders.xlsx', function (OrdersExport $export) {
            return true;
        });
    }
}
